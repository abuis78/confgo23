SPLUNK Login:

Each server has 5 users that look like this
Login: user01, user02, user03, user04, user05
Password: confGo2023 << (The same password for each user, please change after login and remember the new password.)

Server Link: (The assignment to the server is done by the trainer.)
Server 1: https://mc-shw-8518c22fc1fc8f8.stg.splunkcloud.com
Server 2: https://mc-shw-b988e1571fbead2.stg.splunkcloud.com
Server 3: https://mc-shw-5eb7bb81eb27512.stg.splunkcloud.com
Server 4: https://mc-shw-40bfb13ff87b8b2.stg.splunkcloud.com
Server 5: https://mc-shw-07bd215f395c90b.stg.splunkcloud.com
Server 6: https://mc-shw-4cd0710e4ad8f18.stg.splunkcloud.com
Server 7: https://mc-shw-138d22db689e4bc.stg.splunkcloud.com
Server 8: https://mc-shw-33f46d3b9ba48c8.stg.splunkcloud.com
Server 9: https://mc-shw-1734efb2a208ca2.stg.splunkcloud.com
Server 10: https://mc-shw-3d063de4801c801.stg.splunkcloud.com

O11ly URL
https://app.eu0.signalfx.com


Splunk Platform Cloud - Lab

1) Create a new App in Splunk
Name: ConfGo23_<Your name initials>
e.g.: For Andreas Buis >> ConfGo23_AB

2) In the newley created app insert the follwoing search:

`otel_event_indexes` sourcetype="kube:object:nodes" 
| spath path="status.images{}" output=FOO 
| eval imageData=null() 
| foreach mode=multivalue FOO 
    [ eval imageData=mvappend(imageData, json_extract(<<ITEM>>, "names{0}", "names{1}", "sizeBytes")) ] 
| fields _time imageData kind metadata.name 
| fields - _raw 
| mvexpand imageData
| eval imageData=json_array_to_mv(imageData, false()) 
| eval dummy=split(mvindex(imageData, 0), "@"), imageName=mvindex(dummy, 0), imageDigest=mvindex(dummy, 1) 
| eval imageTag=mvindex(split(mvindex(imageData, 1), ":"), 1), imageSizeBytes=mvindex(imageData, 2) 
| dedup kind "metadata.name" imageName imageDigest imageTag imageSizeBytes 
| table _time kind "metadata.name" imageName imageDigest imageTag imageSizeBytes

Save the search as new Report.
Name: K8s Data

3) Add the Report to a Dashboard
Dashboard Title: My K8s Daschboard <Your name initials>
Panel Title: K8s Data

4) add Current pods to a Lookup
Run this search and add it to the existing Dshboard

`otel_event_indexes` sourcetype="kube:object:nodes" 
| spath path="status.images{}" output=FOO 
| eval imageData=null() 
| foreach mode=multivalue FOO 
    [ eval imageData=mvappend(imageData, json_extract(<<ITEM>>, "names{0}", "names{1}", "sizeBytes")) ] 
| fields _time imageData kind metadata.name 
| fields - _raw 
| mvexpand imageData 
| eval imageData=json_array_to_mv(imageData, false()) 
| eval dummy=split(mvindex(imageData, 0), "@"), imageName=mvindex(dummy, 0), imageDigest=mvindex(dummy, 1) 
| eval imageTag=mvindex(split(mvindex(imageData, 1), ":"), 1), imageSizeBytes=mvindex(imageData, 2) 
| dedup kind "metadata.name" imageName imageDigest imageTag imageSizeBytes 
| table imageName imageDigest imageTag imageSizeBytes
| search NOT imageName="docker.io/alexeiled/stress-ng"
| outputlookup confgo_k8s_valid_images.csv

Save it as report.
Name: outputlookup as a comment

Add the Report to the existing Dshboard, we just created before.
Panel Titel: outputlookup as a comment

5) ES Correlation search SPL

Name: Suspicious Container Image Name

`otel_event_indexes` sourcetype="kube:object:nodes" 
| spath path="status.images{}" output=FOO 
| eval imageData=null() 
| foreach mode=multivalue FOO 
    [ eval imageData=mvappend(imageData, json_extract(<<ITEM>>, "names{0}", "names{1}", "sizeBytes")) ] 
| fields _time imageData kind metadata.name 
| fields - _raw 
| mvexpand imageData
| eval imageData=json_array_to_mv(imageData, false()) 
| eval dummy=split(mvindex(imageData, 0), "@"), imageName=mvindex(dummy, 0), imageDigest=mvindex(dummy, 1) 
| eval imageTag=mvindex(split(mvindex(imageData, 1), ":"), 1), imageSizeBytes=mvindex(imageData, 2) 
| search NOT [inputlookup confgo_k8s_valid_images.csv]
| table imageName imageDigest imageTag imageSizeBytes

6) Mission Control template

Name: ConfGo23_AB
Description: New Template for ConfGo23 Workshop

Phase Name: Investigate the Container

Task Name: Search for evil Pod last 24h
Description: A search that creates a list with the names of the cluster, node, container, pod and the associated image.

SPL 1

`otel_event_indexes` sourcetype="kube:object:pods" 
| eval imageData=spath(_raw, "spec.containers{}.image"), imageName=mvindex(split(imageData, ":"), 0), imageTag=mvindex(split(imageData, ":"), 1) 
| eval nodeName=spath(_raw, "spec.nodeName"), containerName=spath(_raw, "spec.containers{}.name") 
| dedup kind "k8s.cluster.name" nodeName containerName "metadata.name" imageName imageTag 
| rename "metadata.name" as podName "k8s.cluster.name" as clusterName
| table clusterName nodeName containerName podName imageName imageTag


7) SOAR Playbook

`otel_event_indexes` sourcetype="kube:container:*" 
    [ search `otel_event_indexes` sourcetype="kube:object:pods" 
    | eval imageData=spath(_raw, "spec.containers{{}}.image"), imageName=mvindex(split(imageData, ":"), 0), imageTag=mvindex(split(imageData, ":"), 1) 
    | eval nodeName=spath(_raw, "spec.nodeName"), containerName=spath(_raw, "spec.containers{{}}.name") 
    | search imageName IN ("*alexeiled/stress-ng") 
    | dedup "metadata.name" 
    | rename "metadata.name" as "k8s.pod.name" 
    | fields "k8s.pod.name" ]
